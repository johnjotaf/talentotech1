{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1MRWuu_CfTCkaTv3SKC2jZxfAzwvTHVlh","timestamp":1749257847507}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ym_NgW0_1Jt-","executionInfo":{"status":"ok","timestamp":1749257866740,"user_tz":300,"elapsed":34,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"8c4e97ec-bec5-4539-f688-a5fb36aa5f17"},"outputs":[{"output_type":"stream","name":"stdout","text":["Valor1\n","¡Hola desde el método 1!\n","El atributo2 se actualizó a: 42\n","42\n"]}],"source":["class MiClase:\n","    # Atributos\n","    atributo1 = \"Valor1\"\n","    atributo2 = 0\n","\n","    # Métodos\n","    def metodo1(self):\n","        print(\"¡Hola desde el método 1!\")\n","\n","    def metodo2(self, parametro):\n","        self.atributo2 = parametro\n","        print(f\"El atributo2 se actualizó a: {self.atributo2}\")\n","\n","# Creación de objetos a partir de la clase\n","objeto1 = MiClase()\n","objeto2 = MiClase()\n","\n","# Acceso a atributos y llamada a métodos\n","print(objeto1.atributo1)  # Salida: Valor1\n","objeto1.metodo1()         # Salida: ¡Hola desde el método 1!\n","\n","objeto2.metodo2(42)       # Salida: El atributo2 se actualizó a: 42\n","print(objeto2.atributo2)  # Salida: 42\n","\n"]},{"cell_type":"code","source":["class Coche:\n","    def __init__(self, marca, modelo, velocidad):\n","        self.marca = marca\n","        self.modelo = modelo\n","        self.velocidad = velocidad\n","\n","    def acelerar(self, aumento):\n","        self.velocidad += aumento\n","        print(f\"El coche {self.marca} {self.modelo} aceleró. Nueva velocidad: {self.velocidad} km/h.\")\n","\n","# Creación de un objeto de tipo Coche\n","mi_coche = Coche(\"Toyota\", \"Camry\", 50)\n","\n","# Llamada al método acelerar\n","mi_coche.acelerar(20)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_GmhEm9TNtUi","executionInfo":{"status":"ok","timestamp":1749257868172,"user_tz":300,"elapsed":36,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"22dbb0b1-0a18-4bf0-c400-554e42634436"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["El coche Toyota Camry aceleró. Nueva velocidad: 70 km/h.\n"]}]},{"cell_type":"code","source":["#Herencia\n","class Animal:\n","    def __init__(self, nombre):\n","        self.nombre = nombre\n","\n","    def hacer_sonido(self):\n","        pass\n","\n","class Perro(Animal):\n","    def hacer_sonido(self):\n","        return \"Guau\"\n","\n"],"metadata":{"id":"XFChPytkQvU4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class Vehiculo:\n","    def __init__(self, marca, modelo):\n","        self.marca = marca\n","        self.modelo = modelo\n","\n","    def arrancar(self):\n","        print(f\"{self.marca} {self.modelo} ha arrancado.\")\n","\n","class Coche(Vehiculo):\n","    def acelerar(self):\n","        print(f\"{self.marca} {self.modelo} está acelerando.\")\n","\n","class Camion(Vehiculo):\n","    def cargar(self):\n","        print(f\"{self.marca} {self.modelo} está cargando mercancía.\")"],"metadata":{"id":"i6jF0ezWRq05"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Polimorfismo"],"metadata":{"id":"MLhEezixUY5q"}},{"cell_type":"code","source":["class Animal:\n","    def sonido(self):\n","        pass\n","\n","class Perro(Animal):\n","    def sonido(self):\n","        return \"Guau\"\n","\n","class Gato(Animal):\n","    def sonido(self):\n","        return \"Miau\"\n","\n","# Función polimórfica\n","def hacer_sonar(animal):\n","    return animal.sonido()\n","\n","# Creación de instancias\n","perro = Perro()\n","gato = Gato()\n","\n","# Llamada a la función polimórfica\n","print(hacer_sonar(perro))  # Salida: Guau\n","print(hacer_sonar(gato))   # Salida: Miau\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y06AagSSUYjX","executionInfo":{"status":"ok","timestamp":1749258179509,"user_tz":300,"elapsed":23,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"ce5c113e-51e7-4619-8e01-c5f982f0fb25"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Guau\n","Miau\n"]}]},{"cell_type":"code","source":["# Interfaz común para operaciones matemáticas\n","class OperacionMatematica:\n","    def ejecutar(self, a, b):\n","        pass\n","\n","# Clases que implementan la interfaz\n","class Suma(OperacionMatematica):\n","    def ejecutar(self, a, b):\n","        return a + b\n","\n","class Resta(OperacionMatematica):\n","    def ejecutar(self, a, b):\n","        return a - b\n","\n","# Uso del polimorfismo\n","operacion1 = Suma()\n","operacion2 = Resta()\n","\n","resultado1 = operacion1.ejecutar(5, 3)  # Suma\n","resultado2 = operacion2.ejecutar(5, 3)  # Resta\n","\n","print(resultado1)  # Salida: 8\n","print(resultado2)  # Salida: 2\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"taCbCI5AV8KH","executionInfo":{"status":"ok","timestamp":1749257910346,"user_tz":300,"elapsed":24,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"aee8c4f4-8f34-4157-dea9-205dcb78f120"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["8\n","2\n"]}]},{"cell_type":"code","source":["# Interfaz común para formas geométricas\n","class FormaGeometrica:\n","    def area(self):\n","        pass\n","\n","# Clases que implementan la interfaz\n","class Circulo(FormaGeometrica):\n","    def __init__(self, radio):\n","        self.radio = radio\n","\n","    def area(self):\n","        return 3.14 * self.radio**2\n","\n","class Cuadrado(FormaGeometrica):\n","    def __init__(self, lado):\n","        self.lado = lado\n","\n","    def area(self):\n","        return self.lado**2\n","\n","# Uso del polimorfismo\n","forma1 = Circulo(5)\n","forma2 = Cuadrado(4)\n","\n","area1 = forma1.area()  # Área del círculo\n","area2 = forma2.area()  # Área del cuadrado\n","\n","print(area1)  # Salida: 78.5\n","print(area2)  # Salida: 16\n"],"metadata":{"id":"-wqyJmL-WBuI","executionInfo":{"status":"ok","timestamp":1749257916884,"user_tz":300,"elapsed":33,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"d06a2ee4-86b9-44ad-b6bc-28b6166a8b8a","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["78.5\n","16\n"]}]},{"cell_type":"code","source":["# Clase base para personajes\n","class Personaje:\n","    def atacar(self):\n","        pass\n","\n","# Clases que heredan de Personaje\n","class Guerrero(Personaje):\n","    def atacar(self):\n","        return \"Espada\"\n","\n","class Mago(Personaje):\n","    def atacar(self):\n","        return \"Hechizo\"\n","\n","# Uso del polimorfismo\n","jugador1 = Guerrero()\n","jugador2 = Mago()\n","\n","ataque1 = jugador1.atacar()  # Ataque del guerrero\n","ataque2 = jugador2.atacar()  # Ataque del mago\n","\n","print(ataque1)  # Salida: Espada\n","print(ataque2)  # Salida: Hechizo\n"],"metadata":{"id":"yr4CLluSWFLV","executionInfo":{"status":"ok","timestamp":1749257922964,"user_tz":300,"elapsed":26,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"f41690bd-78e3-40fe-bfae-07ab0abfd707","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Espada\n","Hechizo\n"]}]}]}