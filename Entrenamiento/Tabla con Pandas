{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNCe5uASR68kUvhQvmbEL/G"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","\n","value_n_list = ['x', 'y']\n","\n","value_x_list = [1, 2, 2, 3, 4, 4, 5, 6]\n","value_y_list = [2, 3, 4, 4, 4, 6, 5, 7]\n","\n","data_dict = {\"|x|\":value_x_list,\n","             \"|y|\":value_y_list,}\n","\n","#print(data_dict)\n","\n","df = pd.DataFrame(data_dict)\n","print(df)\n","\n","df\n","\n","# Multiplicar las columnas 'x' y 'y' y almacenar el resultado en una nueva columna 'xy'\n","df['|xy|'] = df['|x|'] * df['|y|']\n","\n","print(\"\\nDataFrame con la nueva columna '|xy|':\\n\")\n","print(df)\n","\n","\n","# Elevar la columna 'x' al cuadradado almacenar el resultado en una nueva columna 'x²'\n","df['|x²|'] = df['|x|'] ** 2\n","\n","print(\"\\nDataFrame con la nueva columna '|x²|': \\n\")\n","print(df, '\\n')\n","\n","# Sumatoria de las columnas\n","sumatoria_columnas = ['|x|', '|y|', '|xy|', '|x²|']\n","suma_columnas = df[sumatoria_columnas].sum()\n","print(suma_columnas, '\\n')\n","\n","df\n","\n","sumatoria_x = 27\n","sumatoria_y = 35\n","sumatoria_xy = 135\n","sumatoria_x_cuadrado = 111\n","\n","# print(sumatoria_x, sumatoria_y, sumatoria_xy, sumatoria_x_cuadrado)\n","\n","m = ((8 * 135) - (27 * 35))/((8 * 111) - (27)**2)\n","# print(m)\n","\n","b = (sumatoria_y/8) - (m * (sumatoria_x/8))\n","# print(b)\n","\n","pendiente = m\n","print(pendiente)\n","\n","ordenada_origen = b\n","print(ordenada_origen, '\\n')\n","\n","# formula del y pred\n","df['|y pred|'] = pendiente * df['|x|'] + ordenada_origen\n","print(df, '\\n')\n","\n","# calculamos la formula del y menos y pred\n","df['|y - y pred|'] = df['|y|'] - df['|y pred|']\n","print(df, '\\n')\n","\n","# calculamos el error cuadrado\n","df['|y - y pred|^2'] = df['|y - y pred|'] ** 2\n","print(df, '\\n')\n","\n","# calculamos el error cuadrado medio\n","error_cuadrado_medio = df['|y - y pred|^2'].mean()\n","print(error_cuadrado_medio, '\\n')\n","\n","# Sumatoria de las columnas\n","sumatoria_columnas = ['|x|', '|y|', '|xy|', '|x²|', '|y - y pred|^2']\n","suma_columnas = df[sumatoria_columnas].sum()\n","print(suma_columnas, '\\n')\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"3J2dKqG_vcn1","executionInfo":{"status":"ok","timestamp":1747443386368,"user_tz":300,"elapsed":127,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"dc7339fb-1902-40e0-ee6c-3f1b52ac9362"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   |x|  |y|\n","0    1    2\n","1    2    3\n","2    2    4\n","3    3    4\n","4    4    4\n","5    4    6\n","6    5    5\n","7    6    7\n","\n","DataFrame con la nueva columna '|xy|':\n","\n","   |x|  |y|  |xy|\n","0    1    2     2\n","1    2    3     6\n","2    2    4     8\n","3    3    4    12\n","4    4    4    16\n","5    4    6    24\n","6    5    5    25\n","7    6    7    42\n","\n","DataFrame con la nueva columna '|x²|': \n","\n","   |x|  |y|  |xy|  |x²|\n","0    1    2     2     1\n","1    2    3     6     4\n","2    2    4     8     4\n","3    3    4    12     9\n","4    4    4    16    16\n","5    4    6    24    16\n","6    5    5    25    25\n","7    6    7    42    36 \n","\n","|x|      27\n","|y|      35\n","|xy|    135\n","|x²|    111\n","dtype: int64 \n","\n","0.8490566037735849\n","1.5094339622641506 \n","\n","   |x|  |y|  |xy|  |x²|  |y pred|\n","0    1    2     2     1  2.358491\n","1    2    3     6     4  3.207547\n","2    2    4     8     4  3.207547\n","3    3    4    12     9  4.056604\n","4    4    4    16    16  4.905660\n","5    4    6    24    16  4.905660\n","6    5    5    25    25  5.754717\n","7    6    7    42    36  6.603774 \n","\n","   |x|  |y|  |xy|  |x²|  |y pred|  |y - y pred|\n","0    1    2     2     1  2.358491     -0.358491\n","1    2    3     6     4  3.207547     -0.207547\n","2    2    4     8     4  3.207547      0.792453\n","3    3    4    12     9  4.056604     -0.056604\n","4    4    4    16    16  4.905660     -0.905660\n","5    4    6    24    16  4.905660      1.094340\n","6    5    5    25    25  5.754717     -0.754717\n","7    6    7    42    36  6.603774      0.396226 \n","\n","   |x|  |y|  |xy|  |x²|  |y pred|  |y - y pred|  |y - y pred|^2\n","0    1    2     2     1  2.358491     -0.358491        0.128515\n","1    2    3     6     4  3.207547     -0.207547        0.043076\n","2    2    4     8     4  3.207547      0.792453        0.627981\n","3    3    4    12     9  4.056604     -0.056604        0.003204\n","4    4    4    16    16  4.905660     -0.905660        0.820221\n","5    4    6    24    16  4.905660      1.094340        1.197579\n","6    5    5    25    25  5.754717     -0.754717        0.569598\n","7    6    7    42    36  6.603774      0.396226        0.156995 \n","\n","0.4433962264150943 \n","\n","|x|                27.00000\n","|y|                35.00000\n","|xy|              135.00000\n","|x²|              111.00000\n","|y - y pred|^2      3.54717\n","dtype: float64 \n","\n"]},{"output_type":"execute_result","data":{"text/plain":["   |x|  |y|  |xy|  |x²|  |y pred|  |y - y pred|  |y - y pred|^2\n","0    1    2     2     1  2.358491     -0.358491        0.128515\n","1    2    3     6     4  3.207547     -0.207547        0.043076\n","2    2    4     8     4  3.207547      0.792453        0.627981\n","3    3    4    12     9  4.056604     -0.056604        0.003204\n","4    4    4    16    16  4.905660     -0.905660        0.820221\n","5    4    6    24    16  4.905660      1.094340        1.197579\n","6    5    5    25    25  5.754717     -0.754717        0.569598\n","7    6    7    42    36  6.603774      0.396226        0.156995"],"text/html":["\n","  <div id=\"df-10920139-6c0f-48c2-ae02-8bca277497e1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>|x|</th>\n","      <th>|y|</th>\n","      <th>|xy|</th>\n","      <th>|x²|</th>\n","      <th>|y pred|</th>\n","      <th>|y - y pred|</th>\n","      <th>|y - y pred|^2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2.358491</td>\n","      <td>-0.358491</td>\n","      <td>0.128515</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>3.207547</td>\n","      <td>-0.207547</td>\n","      <td>0.043076</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>3.207547</td>\n","      <td>0.792453</td>\n","      <td>0.627981</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>12</td>\n","      <td>9</td>\n","      <td>4.056604</td>\n","      <td>-0.056604</td>\n","      <td>0.003204</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>16</td>\n","      <td>16</td>\n","      <td>4.905660</td>\n","      <td>-0.905660</td>\n","      <td>0.820221</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>24</td>\n","      <td>16</td>\n","      <td>4.905660</td>\n","      <td>1.094340</td>\n","      <td>1.197579</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>5.754717</td>\n","      <td>-0.754717</td>\n","      <td>0.569598</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>6</td>\n","      <td>7</td>\n","      <td>42</td>\n","      <td>36</td>\n","      <td>6.603774</td>\n","      <td>0.396226</td>\n","      <td>0.156995</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10920139-6c0f-48c2-ae02-8bca277497e1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-10920139-6c0f-48c2-ae02-8bca277497e1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-10920139-6c0f-48c2-ae02-8bca277497e1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9634f6eb-2cd3-4fac-8ec5-8cdbc887bd43\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9634f6eb-2cd3-4fac-8ec5-8cdbc887bd43')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9634f6eb-2cd3-4fac-8ec5-8cdbc887bd43 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_1e31d243-b374-4d15-8992-50de9e020578\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1e31d243-b374-4d15-8992-50de9e020578 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"|x|\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          2,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"|y|\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 7,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          3,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"|xy|\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 2,\n        \"max\": 42,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6,\n          24,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"|x\\u00b2|\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 1,\n        \"max\": 36,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          4,\n          36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"|y pred|\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4306756739726287,\n        \"min\": 2.3584905660377355,\n        \"max\": 6.60377358490566,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2.3584905660377355,\n          3.2075471698113205,\n          6.60377358490566\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"|y - y pred|\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7118557048127053,\n        \"min\": -0.9056603773584904,\n        \"max\": 1.0943396226415096,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -0.2075471698113205,\n          1.0943396226415096,\n          -0.35849056603773555\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"|y - y pred|^2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.430280334863868,\n        \"min\": 0.003203987184051237,\n        \"max\": 1.1975792096831617,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.0430758276966891,\n          1.1975792096831617,\n          0.12851548593805603\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]}]}