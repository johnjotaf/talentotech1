{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMhXHFpsrgSgEcybcChIO79"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"RL4xQRvE8r5V"},"outputs":[],"source":["import pandas as pd\n","import sklearn\n","import seaborn as sns\n","import openpyxl as op"]},{"cell_type":"code","source":["df = pd.read_excel('regresion_multiple.xlsx')\n","df.head(14)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"eJt3DUp587EJ","executionInfo":{"status":"ok","timestamp":1748571929574,"user_tz":300,"elapsed":51,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"47c0f455-5797-496e-e868-1ea3b664a910"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        y  x1  x2  x3  x4\n","0    78.5   7  26   6  60\n","1    74.3   1  29  15  52\n","2   104.3  11  56   8  20\n","3    87.6  11  31   8  47\n","4    95.9   7  52   6  33\n","5   109.2  11  55   9  22\n","6   102.7   3  71  17   6\n","7    72.5   1  31  22  44\n","8    93.1   2  54  18  22\n","9   115.9  21  47   4  26\n","10   83.8   1  40  23  34\n","11  113.3  11  66   9  12\n","12  109.4  10  68   8  12"],"text/html":["\n","  <div id=\"df-1ebf9a68-8b14-4e39-a34d-60d80c303bae\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>y</th>\n","      <th>x1</th>\n","      <th>x2</th>\n","      <th>x3</th>\n","      <th>x4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>78.5</td>\n","      <td>7</td>\n","      <td>26</td>\n","      <td>6</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>74.3</td>\n","      <td>1</td>\n","      <td>29</td>\n","      <td>15</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>104.3</td>\n","      <td>11</td>\n","      <td>56</td>\n","      <td>8</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>87.6</td>\n","      <td>11</td>\n","      <td>31</td>\n","      <td>8</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>95.9</td>\n","      <td>7</td>\n","      <td>52</td>\n","      <td>6</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>109.2</td>\n","      <td>11</td>\n","      <td>55</td>\n","      <td>9</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>102.7</td>\n","      <td>3</td>\n","      <td>71</td>\n","      <td>17</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>72.5</td>\n","      <td>1</td>\n","      <td>31</td>\n","      <td>22</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>93.1</td>\n","      <td>2</td>\n","      <td>54</td>\n","      <td>18</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>115.9</td>\n","      <td>21</td>\n","      <td>47</td>\n","      <td>4</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>83.8</td>\n","      <td>1</td>\n","      <td>40</td>\n","      <td>23</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>113.3</td>\n","      <td>11</td>\n","      <td>66</td>\n","      <td>9</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>109.4</td>\n","      <td>10</td>\n","      <td>68</td>\n","      <td>8</td>\n","      <td>12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ebf9a68-8b14-4e39-a34d-60d80c303bae')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1ebf9a68-8b14-4e39-a34d-60d80c303bae button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1ebf9a68-8b14-4e39-a34d-60d80c303bae');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7ee805bf-e5fc-4faa-98c5-66fb9f4a9419\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ee805bf-e5fc-4faa-98c5-66fb9f4a9419')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7ee805bf-e5fc-4faa-98c5-66fb9f4a9419 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 13,\n  \"fields\": [\n    {\n      \"column\": \"y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.043722602587094,\n        \"min\": 72.5,\n        \"max\": 115.9,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          113.3,\n          115.9,\n          78.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"x1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 1,\n        \"max\": 21,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          7,\n          1,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"x2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 26,\n        \"max\": 71,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          66,\n          40,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"x3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 4,\n        \"max\": 23,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          4,\n          15,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"x4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 6,\n        \"max\": 60,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          22,\n          60,\n          34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SA8ezDJzAwGL","executionInfo":{"status":"ok","timestamp":1748571998832,"user_tz":300,"elapsed":13,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"afc8d3e8-df05-4cad-ac87-699fb38dc01d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 13 entries, 0 to 12\n","Data columns (total 5 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   y       13 non-null     float64\n"," 1   x1      13 non-null     int64  \n"," 2   x2      13 non-null     int64  \n"," 3   x3      13 non-null     int64  \n"," 4   x4      13 non-null     int64  \n","dtypes: float64(1), int64(4)\n","memory usage: 652.0 bytes\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"cBR_6e4tA1VR","executionInfo":{"status":"ok","timestamp":1748572019049,"user_tz":300,"elapsed":109,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"c6a09cdb-7257-4741-d510-1f2a888f3e4f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                y         x1         x2         x3        x4\n","count   13.000000  13.000000  13.000000  13.000000  13.00000\n","mean    95.423077   7.461538  48.153846  11.769231  30.00000\n","std     15.043723   5.882394  15.560881   6.405126  16.73818\n","min     72.500000   1.000000  26.000000   4.000000   6.00000\n","25%     83.800000   2.000000  31.000000   8.000000  20.00000\n","50%     95.900000   7.000000  52.000000   9.000000  26.00000\n","75%    109.200000  11.000000  56.000000  17.000000  44.00000\n","max    115.900000  21.000000  71.000000  23.000000  60.00000"],"text/html":["\n","  <div id=\"df-ded5eb14-5d55-4075-80c5-d578aab96fc4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>y</th>\n","      <th>x1</th>\n","      <th>x2</th>\n","      <th>x3</th>\n","      <th>x4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>13.000000</td>\n","      <td>13.000000</td>\n","      <td>13.000000</td>\n","      <td>13.000000</td>\n","      <td>13.00000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>95.423077</td>\n","      <td>7.461538</td>\n","      <td>48.153846</td>\n","      <td>11.769231</td>\n","      <td>30.00000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>15.043723</td>\n","      <td>5.882394</td>\n","      <td>15.560881</td>\n","      <td>6.405126</td>\n","      <td>16.73818</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>72.500000</td>\n","      <td>1.000000</td>\n","      <td>26.000000</td>\n","      <td>4.000000</td>\n","      <td>6.00000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>83.800000</td>\n","      <td>2.000000</td>\n","      <td>31.000000</td>\n","      <td>8.000000</td>\n","      <td>20.00000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>95.900000</td>\n","      <td>7.000000</td>\n","      <td>52.000000</td>\n","      <td>9.000000</td>\n","      <td>26.00000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>109.200000</td>\n","      <td>11.000000</td>\n","      <td>56.000000</td>\n","      <td>17.000000</td>\n","      <td>44.00000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>115.900000</td>\n","      <td>21.000000</td>\n","      <td>71.000000</td>\n","      <td>23.000000</td>\n","      <td>60.00000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ded5eb14-5d55-4075-80c5-d578aab96fc4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ded5eb14-5d55-4075-80c5-d578aab96fc4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ded5eb14-5d55-4075-80c5-d578aab96fc4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b3fd5426-d45e-4d3c-bcb6-8a1cf7674252\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b3fd5426-d45e-4d3c-bcb6-8a1cf7674252')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b3fd5426-d45e-4d3c-bcb6-8a1cf7674252 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40.033439188245,\n        \"min\": 13.0,\n        \"max\": 115.9,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          95.42307692307692,\n          95.9,\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"x1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.452192042968317,\n        \"min\": 1.0,\n        \"max\": 21.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7.461538461538462,\n          7.0,\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"x2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.785026658033495,\n        \"min\": 13.0,\n        \"max\": 71.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          48.15384615384615,\n          52.0,\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"x3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.158924125550953,\n        \"min\": 4.0,\n        \"max\": 23.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          11.76923076923077,\n          9.0,\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"x4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.64449077457999,\n        \"min\": 6.0,\n        \"max\": 60.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          30.0,\n          26.0,\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","import pandas as pd\n","\n","sns.pairplot(df)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":958},"id":"a7T_0B3KA6yU","executionInfo":{"status":"ok","timestamp":1748572463528,"user_tz":300,"elapsed":4484,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"e0be2219-efe6-4f3c-eddb-428790bb0b83"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1250x1250 with 30 Axes>"],"image/png":"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5vj7v//7+N//+3/HH//xH8cLX/jCqdd89KMfjZtvvjk++clPxgMPPBCLFy+ODRs2xNjYWIKRAwAAAFAPUn3m2bZt22LlypWxffv2qedWr1499d+Tk5Nx0003xfve97644IILIiLis5/9bCxbtizuvPPOuPjiixc8ZgAAAADqR6rPPPvSl74Ur371q+Otb31rnHTSSbF27dr48z//86nxvXv3xoEDB2L9+vVTz2UymTjrrLNi9+7dJd93fHw8CoXCUQ8gPeQopJ88hXSTo5BuchRqS6qbZz/84Q+nvr/sq1/9arz73e+O//gf/2N85jOfiYiIAwcORETEsmXLjvq9ZcuWTY3NZMuWLZHJZKYeK1eurN6HAI6ZHIX0k6eQbnIU0k2OQm1JdfPs2WefjVe96lXxkY98JNauXRvvete74vd///fjk5/85Lzed/PmzZHP56ceTz75ZIUiBipBjkL6yVNINzkK6SZHobak+jvPVqxYEb/0S7901HOnnXZa7NixIyIili9fHhERBw8ejBUrVky95uDBg3HGGWeUfN/W1tZobW2tfMBARchRSD95CukmRyHd5CjUllSfefb6178+HnvssaOe+/73vx8veclLIuIXNw9Yvnx57Ny5c2q8UCjEAw88EOvWrVvQWAEAAACoP6k+8+zqq6+O173udfGRj3wkfuu3fiu++c1vxp/92Z/Fn/3Zn0VERFNTU1x11VVx4403Rm9vb6xevTre//73R09PT1x44YXJBg8AAABAzUt18+w1r3lNfPGLX4zNmzfHDTfcEKtXr46bbrop3v72t0+95pprrolDhw7Fu971rhgaGoqzzz477rrrrmhra0swcgAAAADqQaqbZxERb37zm+PNb35zyfGmpqa44YYb4oYbbljAqAAAAABoBKn+zjMAAAAASJLmGQAAAACUoHkGAAAAACVongEAAABACZpnAAAAAFCC5hkAAAAAlKB5BgAAAAAlLEo6AGg0+dFi5EaKURibiK725sgubolMR0vSYUHFmesAVIs1BuqDXKZWaJ7BAto/dDiu3bEn7hvMTT3X35uNrQN90dPdnmBkUFnmOgDVYo2B+iCXqSUu24QFkh8tTlscIiJ2Debiuh17Ij9aTCgyqCxzHYBqscZAfZDL1BrNM1gguZHitMXhiF2DuciNWCCoD+Y6ANVijYH6IJepNZpnsEAK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zgF7cdr8xByESDBO4FROm9MBRCaqt212WLdunSSpqKhImzZt0sGDBzV27FhJ0jPPPBOLtwQk8V0ESAyMcwBmYg5CJBgnAAAniUnx7LLLLtPdd9+ttrY2DRgwQB6PRwcOHNAVV1yh+fPnx+ItAUl8FwESA+McgJmYgxAJxgkAwElictvmunXrdOONN+rtt9/WypUrtWfPHt18880aPXq0tm3bFou3BEL4LgIkAsY5ADMxByESjBMAgFPEpHh23nnnadu2bbr99ts1ceJEtbe368c//rHuueceHh6AuOC7CJAIGOcAzMQchEgwTgAAThCT2zYl6dNPP9WWLVs0YsQIJScna9euXWpubo7V2wEAAAAAAABRF5PiWWVlpUpKSnTJJZfo448/1gcffKCtW7equLhYGzduPK59LVu2TMXFxXK73XK73SopKdEbb7wRam9paVFFRYWGDBmirKwslZeXq76+PtqHBAAAAAAAgAQUk+LZE088oTVr1mjJkiVKS0vTuHHj9MEHH2j69Om64IILjmtfI0aMUGVlpaqrq7VlyxZddNFFuvLKK/XnP/9ZkjR37ly9+uqreumll7Rhwwbt27dP06dPj8FRAQAAAAAAINHE5DvPduzYIa+385N1UlJS9LOf/Ux/93d/d1z7uuKKKzr9/tOf/lTLli3Tpk2bNGLECD333HNauXKlLrroIknS8uXLNXbsWG3atEnnnntu/w4EAAAAAAAACS0mxbNvFs6Odf755/d5v0ePHtVLL72kQ4cOqaSkRNXV1Wpra1NZWVnoNWPGjFFBQYE2btwYtnjW2tqq1tbW0O+BQKDPMQGIPnIUsD7yFLA2chSwNnIUsJeYPTAgmnbs2KGsrCylpqbq9ttv18svv6zTTjtNdXV1crlcysnJ6fT63Nxc1dXVhd3fokWL5PF4Qj8jR46M8REAOB7kKGB95ClgbeQoYG3kKGAvtiiejR49Wtu2bdPmzZt1xx13aNasWdq5c2ef97dgwQL5/f7Qz969e6MYLYD+IkcB6yNPAWsjRwFrI0cBe4nJbZvR5nK5dMopp0iSzjrrLH344Yd64okndO211yoYDKqhoaHTp8/q6+uVl5cXdn+pqalKTU2NddgA+ogcBayPPAWsjRwFrI0cBezFFp88+6b29na1trbqrLPOUkpKitauXRtq27Vrl2pra1VSUmJihAAA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/vvv1/jx480OB8A3VFVV6ZJLLtHvf/97VVdX68ILL9QVV1yhrVu3mh0agP+VmZmpO++8U1VVVfrkk090//336/7779ezzz5rdmgAjtHQ0KAbb7xRF198sdmhIMoonsF2nn/+eQ0ZMkStra2dtl911VX6zne+Y1JUQOL67//+b+Xl5emRRx4JbfvjH/8ol8ultWvX6sQTT9QTTzyhG2+8UR6Px8RIgcTUW44+/vjjuueee3TOOeeoqKhIjzzyiIqKivTqq6+aGDWQWHrL0wkTJmjGjBk6/fTTdeKJJ+qGG27Q1KlT9e6775oYNZA4esvRDrfffruuv/56lZSUmBEmYojiGWznmmuu0dGjR/XKK6+Etn399dd6/fXXNXv2bBMjAxLT0KFD9ctf/lIPPvigtmzZosbGRn3nO9/RnXfeyb+6ARZwvDna3t6uxsZGDR482IRogcR0vHm6detW/fGPf9T5559vQrRA4okkR5cvX67PP/9cCxcuNDlaxEKy2QEAxys9PV3XX3+9li9frmuuuUaS9Ktf/UoFBQW64IILzA0OSFD/5//8H916662aOXOmzj77bGVmZmrRokVmhwXgfx1Pjv7zP/+zmpqa9A//8A9xjhJIbJHk6YgRI/Tf//3fOnLkiB588EHdcsstJkULJJ6ecrSmpkbz58/Xu+++q+RkyixORK/Clm699Vadc845+uqrr3TCCSdoxYoVuummm5SUlGR2aEDC+ud//meNGzdOL730kqqrq5Wammp2SACOEUmOrly5Ug899JD+8z//U8OGDTMhSiCx9Zan7777rpqamrRp0ybNnz9fp5xyimbMmGFStEDi6S5Hjx49quuvv14PPfSQTj31VLNDRIxw2yZsacKECRo/fryef/55VVdX689//rNuuukms8MCEtpnn32mffv2qb29XV988YXZ4QD4ht5ydNWqVbrlllv04osvqqysLP4BAug1TwsLC3XGGWfo1ltv1dy5c/Xggw/GPUYgkXWXo42NjdqyZYvuvPNOJScnKzk5WQ8//LA++ugjJScn65133jE3aEQFnzyDbd1yyy16/PHH9dVXX6msrEwjR440OyQgYQWDQd1www269tprNXr0aN1yyy3asWMHn1wBLKK3HH3hhRc0e/ZsrVq1SpdffrnJ0QKJ6XjX0vb29i4P0AIQO+Fy1Ov1aseOHZ1e+9RTT+mdd97Rb3/7WxUWFpoUMaIpyTAMw+wggL7w+/3Kz8/XkSNH9Pzzz+vaa681OyQgYd1999367W9/q48++khZWVk6//zz5fF49Nprr0mStm3bJulvRe/Ro0fr7rvvlsvl0mmnnWZi1EDi6ClHV65cqVmzZumJJ57Q9OnTQ3+Tnp7OE3KBOOopT5cuXaqCggKNGTNGklRVVaW5c+fq+9//vn7yk5+YHDmQGHq73j3Wgw8+qDVr1oSugWF/FM9gazfeeKNef/117du3j+9XAkyyfv16XXLJJVq3bp2mTJkiSfriiy80fvx4VVZW6o477uj2+whHjRrF7Z1AHPSWo7/5zW+0YcOGLn83a9YsrVixIs7RAomptzw9cuSInnnmGe3Zs0fJyck6+eSTdeutt+of//EfNWAA38QDxFok17vHonjmPBTPYGsXX3yxTj/9dD355JNmhwIAAAAAAByI4hls6eDBg1q/fr3+/u//Xjt37tTo0aPNDgkAAAAAADgQDwyALU2YMEEHDx7U4sWLKZwBAAAAAICY4ZNnAAAAAAAAQBh8uyQAAAAAAAAQBsUzAAAAAAAAIAyKZwAAAAAAAEAYFM8AAAAAAACAMCieAQAAAAAAAGFQPAMAAAAAAADCoHgGAAAAAAAAhEHxDAAAAAAAAAiD4hkAAAAAAAAQxv8Du5WF/Lg4lNsAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","# extrayendo la información del dataset\n","y = df[[\"y\"]]\n","x = df[[\"x1\", \"x2\", \"x3\",\"x4\"]]\n","\n","# particionando en dos conjuntos _train y _test\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)\n","print(X_train.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"RZEr0ZtaCrUF","executionInfo":{"status":"error","timestamp":1748650553786,"user_tz":300,"elapsed":3481,"user":{"displayName":"John Jairo Acosta Florez","userId":"03114766721424994781"}},"outputId":"83ffa3a1-bc94-4f73-c65b-c500f73f2afb"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-54bd7d2ed56c>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# extrayendo la información del dataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"y\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"x1\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"x2\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"x3\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"x4\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}]}]}